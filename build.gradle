plugins {
	id 'com.github.jk1.dependency-license-report' version '1.16'
	id "com.moowork.node" version "1.3.1"
	id 'org.springframework.boot' version '2.4.1'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.8'
	id 'checkstyle'
	id 'jacoco'
	id 'java'
}

group = 'de.kettcards'
version = '1.0'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	//compiler
	annotationProcessor 'org.projectlombok:lombok'

	//spring
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	//db
	runtimeOnly 'org.hsqldb:hsqldb'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

	//pdf generator
	implementation group: 'org.apache.pdfbox', name: 'pdfbox', version: '2.0.22'
	implementation 'com.twelvemonkeys.imageio:imageio:3.6.2'
	implementation 'com.twelvemonkeys.imageio:imageio-batik:3.6.2'
	implementation 'org.apache.xmlgraphics:batik-transcoder:1.14'
	implementation group: 'de.rototor.pdfbox', name: 'graphics2d', version: '0.31'
	implementation 'com.weblookandfeel:svg-salamander:1.1.2.2'

	//table import
	implementation group: 'org.apache.poi', name: 'poi', version: '4.1.2'
	implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '4.1.2'

	//webjars
	runtimeOnly group: 'org.webjars.bower', name: 'jquery', version: '3.5.1'

	//dev
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	developmentOnly 'org.springframework.boot:spring-boot-starter-actuator'

	//test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation group: 'org.apache.pdfbox', name: 'preflight', version: '2.0.22'

}

node {
	version = '14.16.0'
	distBaseUrl = 'https://nodejs.org/dist'
	download = true
	workDir = file(".gradle/nodejs")
	npmWorkDir = file(".gradle/npm")
	nodeModulesDir = file("${project.projectDir}")
}

repositories.whenObjectAdded {
	if (it instanceof IvyArtifactRepository) {
		metadataSources {
			artifact()
		}
	}
}

test {
	useJUnitPlatform()
	ignoreFailures = true
	finalizedBy jacocoTestReport
}

checkstyle {
	ignoreFailures = true
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
}

/**
 * Struct Editor Tasks
 */

task cleanTsStruct() {
	delete "${project.projectDir}/src/main/resources/static/struct"
}

task buildTsStructDep(type: NpmTask) {
	workingDir = file("${project.projectDir}/src/ts_struct")
	args = ['install']
}

task buildTsStruct(type: NpmTask) {
	dependsOn cleanTsStruct
	dependsOn buildTsStructDep
	workingDir = file("${project.projectDir}/src/ts_struct")
	args = ['run', 'buildProd']
}

/**
 * Front Editor Tasks
 */

task cleanTsFront() {
	delete "${project.projectDir}/src/main/resources/static/front/front.js"
}

task buildTsFrontDep(type: NpmTask) {
	workingDir = file("${project.projectDir}/src/ts_front/front/")
	args = ['install']
}

task buildTsFront(type: NpmTask) {
	dependsOn cleanTsFront
	dependsOn buildTsFrontDep
	workingDir = file("${project.projectDir}/src/ts_front/front/")
	args = ['run', 'build']
}


task cleanTs() {
	dependsOn cleanTsFront
	dependsOn cleanTsStruct
}

task buildTs() {
	group build
	dependsOn buildTsFront
	dependsOn buildTsStruct
}

assemble() {
	dependsOn buildTs
}

bootRun() {
	dependsOn buildTs
}
